
@mixin side-padding($padding) {
  padding-left:$padding;
  padding-right:$padding;
}

.row{
  &.panel-container{
    @include side-padding($sidePadingSize1);
  }
}
td{
  @for $i from 0 through 100 {
      &.p-#{$i} {
        width:#{$i}#{%};
      }
    }
    &.p-auto{
      width:auto;
    }
}

@for $i from $sizeIteratorStart through $sizeIteratorEnd {
  $absoluteClassPostFix     : $i*5+'px';
  $percentClassPostFix      : ($i / 2);
  $percentClassPostFixValue : $i/2;
  @if ($i % 2 > 0) {
    $percentClassPostFix:($i / 2 - 0.5) +'p5';
  }
  /* width:n px;*/
  .w-#{$absoluteClassPostFix} {
    width:#{$i*5}px !important;
  }
  /* max-width:n px;*/
  .mxw-#{$absoluteClassPostFix} {
    max-width:#{$i*5}px !important;
  }
  /* min-width:n px;*/
  .mnw-#{$absoluteClassPostFix} {
    min-width:#{$i*5}px !important;
  }

  /* width:n %;*/
  .w-#{$percentClassPostFix} {
        width:#{$percentClassPostFixValue}%!important;
  }
  /* max-width:n %;*/
  .mxw-#{$percentClassPostFix} {
        width:#{$percentClassPostFixValue}%!important;
  }
  /* min-width:n %;*/
  .mnw-#{$percentClassPostFix} {
        width:#{$percentClassPostFixValue}%!important;
  }

  /* height:n px;*/
  .h-#{$absoluteClassPostFix} {
    height:#{$i*5}px !important;
  }
  /* max-height:n px;*/
  .mxh-#{$absoluteClassPostFix} {
    max-height:#{$i*5}px !important;
  }
  /* min-height:n px;*/
  .mnh-#{$absoluteClassPostFix} {
    min-height:#{$i*5}px !important;
  }

  /* width:n %;*/
  .h-#{$percentClassPostFix} {
        height:#{$percentClassPostFixValue}%!important;
  }
  /* max-width:n %;*/
  .mxh-#{$percentClassPostFix} {
        height:#{$percentClassPostFixValue}%!important;
  }
  /* min-width:n %;*/
  .mnh-#{$percentClassPostFix} {
        height:#{$percentClassPostFixValue}%!important;
  }
  @if ($i < 5) {
    .b{
      @each $current-side in $sides-list {
        $count: index($sides-list, $current-side);
        @each $current-side-mode in nth($sides-modes, $count) {
        &#{$current-side}-#{$i}px {
            @if($current-side-mode == ''){
            border:#{$i}px solid;
          }@else{
            border-#{$current-side-mode}:#{$i}px solid;
          }

          }
        &#{$current-side}-#{$i} {
            @if($current-side-mode == ''){
            border:#{$i}(%) solid;
          }@else{
            border-#{$current-side-mode}:#{$i}(%) solid;
          }

          }
      }
    }
  }
  }
  @if ($i < 100) {
    .p{
      @each $current-side in $sides-list {
        $count: index($sides-list, $current-side);
        @each $current-side-mode in nth($sides-modes, $count) {
        &#{$current-side}-#{$i}px {
            @if($current-side-mode == ''){
            padding:#{$i}px;
          }@else{
            padding-#{$current-side-mode}:#{$i}px;
          }
          }
        &#{$current-side}-#{$i} {
            @if($current-side-mode == ''){
            padding:#{$i}(%);
          }@else{
            padding-#{$current-side-mode}:#{$i}(%);
          }
          }
      }
    }
  }
    .m{
      @each $current-side in $sides-list {
        $count: index($sides-list, $current-side);
        @each $current-side-mode in nth($sides-modes, $count) {
        &#{$current-side}-#{$i}px {
            @if($current-side-mode == ''){
            margin:#{$i}px;
          }@else{
            margin-#{$current-side-mode}:#{$i}px;
          }
          }
        &#{$current-side}-#{$i} {
            @if($current-side-mode == ''){
            margin:#{$i}(%);
          }@else{
            margin-#{$current-side-mode}:#{$i}(%);
          }
          }
      }
    }
  }
  }
}

.t{
  &-center{
      text-align: center !important;
  }
  &-middle{
    vertical-align: middle !important;
  }
  &-right{
    text-align: right !important;
  }
  &-left{
    text-align: left !important;
  }
}

.f{
  &-left{
    float: left !important;
  }
  &-right{
    float: right !important;
  }
  &-bold{
    font-weight: bold !important;
  }
  @for $i from 6 through 40 {
    &-s#{$i}px{
      font-size: #{$i}px !important;
    }
  }
}

.sumatory-table{
  & thead{
    & td{
      border-top:$sumatorySize $sumatoryBorderStyle $sumatoryBorderColor !important;
    }
  }

  & thead,tbody{
    & td:first-child{
      border-left:$sumatorySize $sumatoryBorderStyle $sumatoryBorderColor !important;
    }
    & td:last-child{
      border-right:$sumatorySize $sumatoryBorderStyle $sumatoryBorderColor !important;
    }
  }

  & tfoot{
    & td{
      border-left:none !important;
      border-right:none !important;
    }
    & .sumatory{
      font-size:14px;
      border-bottom:$sumatorySize $sumatoryBorderStyle $sumatoryResumeBorderColor !important;
      border-right:$sumatorySize $sumatoryBorderStyle $sumatoryResumeBorderColor !important;
      &:first-of-type{
        background-color:red !important;
      }
      &-label{
        border-right:$sumatorySize $sumatoryBorderStyle $sumatoryResumeBorderColor !important;
        font-weight: bold !important;
      }
    }
  }

  & .table-scrollable{
    border:none !important;
  }

  & table{
    border-bottom:none !important;
  }
}

//Color strategy
@for $i from 1 through $colorVariationCount {
  $prefix: '';

    @if ($i > 1) {
    $prefix: '-'+$i;
  }

  .txt-{
    &neutral#{$prefix}{
      color:coloring('neutral',$i);
    }
    &positive#{$prefix}{
      color:coloring('positive',$i);
    }
    &negative#{$prefix}{
      color:coloring('negative',$i);
    }
    &info#{$prefix}{
      color:coloring('info',$i);
    }
    &warning#{$prefix}{
      color:coloring('warning',$i);
    }
    &primary#{$prefix}{
      color:coloring('primary',$i);
    }
    &secondary#{$prefix}{
      color:coloring('secondary',$i);
    }
    &tertiary#{$prefix}{
      color:coloring('tertiary',$i);
    }
    &white#{$prefix}{
      color:coloring('white',$i);
    }
    &lightblue#{$prefix}{
      color:coloring('lightblue',$i);
    }
    &darkblue#{$prefix}{
      color:coloring('darkblue',$i);
    }
    &black#{$prefix}{
      color:coloring('black',$i);
    }
    &firebrick#{$prefix}{
      color:coloring('firebrick',$i);
    }
  }

  .bg-{
    &neutral#{$prefix}{
      background-color:coloring('neutral',$i);
    }
    &positive#{$prefix}{
      background-color:coloring('positive',$i);
    }
    &negative#{$prefix}{
      background-color:coloring('negative',$i);
    }
    &info#{$prefix}{
      background-color:coloring('info',$i);
    }
    &warning#{$prefix}{
      background-color:coloring('warning',$i);
    }
    &primary#{$prefix}{
      background-color:coloring('primary',$i);
    }
    &secondary#{$prefix}{
      background-color:coloring('secondary',$i);
    }
    &tertiary#{$prefix}{
      background-color:coloring('tertiary',$i);
    }
    &white#{$prefix}{
      background-color:coloring('white',$i);
    }
    &lightblue#{$prefix}{
      background-color:coloring('lightblue',$i);
    }
    &darkblue#{$prefix}{
      background-color:coloring('darkblue',$i);
    }
    &black#{$prefix}{
      background-color:coloring('black',$i);
    }
    &firebrick#{$prefix}{
      background-color:coloring('firebrick',$i);
    }
  }

  .colored-box-{
    &neutral#{$prefix}{
      color            :coloring('primary',$i);
      background-color :coloring('neutral',$i);
    }
    &positive#{$prefix}{
      color            :coloring('positive',$i);
      background-color :coloring('neutral',$i);
    }
    &negative#{$prefix}{
      color            :coloring('negative',$i);
      background-color :coloring('neutral',$i);
    }
    &info#{$prefix}{
      color            :coloring('info',$i);
      background-color :coloring('neutral',$i);
    }
    &warning#{$prefix}{
      color            :coloring('warning',$i);
      background-color :coloring('neutral',$i);
    }
    &primary#{$prefix}{
      color            :coloring('primary',$i);
      background-color :coloring('neutral',$i);
    }
    &secondary#{$prefix}{
      color            :coloring('secondary',$i);
      background-color :coloring('neutral',$i);
    }
    &tertiary#{$prefix}{
      color            :coloring('tertiary',$i);
      background-color :coloring('neutral',$i);
    }
    &white#{$prefix}{
      color            :coloring('white',$i);
      background-color :coloring('neutral',$i);
    }
    &lightblue#{$prefix}{
      color            :coloring('lightblue',$i);
      background-color :coloring('neutral',$i);
    }
    &darkblue#{$prefix}{
      color            :coloring('darkblue',$i);
      background-color :coloring('neutral',$i);
    }
    &black#{$prefix}{
      color            :coloring('black',$i);
      background-color :coloring('neutral',$i);
    }
    &firebrick#{$prefix}{
      color            :coloring('firebrick',$i);
      background-color :coloring('neutral',$i);
    }
  }

  .dark-colored-box-{
    &neutral#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('primary',$i);
    }
    &positive#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('positive',$i);
    }
    &negative#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('negative',$i);
    }
    &info#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('info',$i);
    }
    &warning#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('warning',$i);
    }
    &primary#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('primary',$i);
    }
    &secondary#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('secondary',$i);
    }
    &tertiary#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('tertiary',$i);
    }
    &white#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('white',$i);
    }
    &lightblue#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('lightblue',$i);
    }
    &darkblue#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('darkblue',$i);
    }
    &black#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('black',$i);
    }
    &firebrick#{$prefix}{
      color            :coloring('neutral',$i);
      background-color :coloring('firebrick',$i);
    }
  }
}

.m{
  &-auto{
    margin:auto !important;
  }
  &y-auto{
    margin-top    :auto !important;
    margin-bottom :auto !important;
  }
  &x-auto{
    margin-left  :auto !important;
    margin-right :auto !important;
  }
  &a{
    &-xs{
      margin: $xsValue;
    }
    &-sm{
      margin: $smValue;
    }
    &-md{
      margin: $mdValue;
    }
    &-lg{
      margin: $lgValue;
    }
    &-xl{
      margin: $xlValue;
    }
  }
  &y{
    &-xs{
      margin-top    : $xsValue;
      margin-bottom : $xsValue;
    }
    &-sm{
      margin-top    : $smValue;
      margin-bottom : $smValue;
    }
    &-md{
      margin-top    : $mdValue;
      margin-bottom : $mdValue;
    }
    &-lg{
      margin-top    : $lgValue;
      margin-bottom : $lgValue;
    }
    &-xl{
      margin-top    : $xlValue;
      margin-bottom : $xlValue;
    }
  }
  &x{
    &-xs{
      margin-left  : $xsValue;
      margin-right : $xsValue;
    }
    &-sm{
      margin-left  : $smValue;
      margin-right : $smValue;
    }
    &-md{
      margin-left  : $mdValue;
      margin-right : $mdValue;
    }
    &-lg{
      margin-left  : $lgValue;
      margin-right : $lgValue;
    }
    &-xl{
      margin-left  : $xlValue;
      margin-right : $xlValue;
    }
  }
  &t{
    &-xs{
      margin-top: $xsValue;
    }
    &-sm{
      margin-top: $smValue;
    }
    &-md{
      margin-top: $mdValue;
    }
    &-lg{
      margin-top: $lgValue;
    }
    &-xl{
      margin-top: $xlValue;
    }
  }
  &b{
    &-xs{
      margin-bottom: $xsValue;
    }
    &-sm{
      margin-bottom: $smValue;
    }
    &-md{
      margin-bottom: $mdValue;
    }
    &-lg{
      margin-bottom: $lgValue;
    }
    &-xl{
      margin-bottom: $xlValue;
    }
  }
  &l{
    &-xs{
      margin-left: $xsValue;
    }
    &-sm{
      margin-left: $smValue;
    }
    &-md{
      margin-left: $mdValue;
    }
    &-lg{
      margin-left: $lgValue;
    }
    &-xl{
      margin-left: $xlValue;
    }
  }
  &r{
    &-xs{
      margin-right: $xsValue;
    }
    &-sm{
      margin-right: $smValue;
    }
    &-md{
      margin-right: $mdValue;
    }
    &-lg{
      margin-right: $lgValue;
    }
    &-xl{
      margin-right: $xlValue;
    }
  }
}
.p{
  &-auto{
    padding:auto !important;
  }
  &y-auto{
    padding-top    :auto !important;
    padding-bottom :auto !important;
  }
  &x-auto{
    padding-left  :auto !important;
    padding-right :auto !important;
  }
  &-pad1{
    padding: 5px 0 5px 5px;
  }
  &-absolute{
    position: absolute !important;
  }
  &a{
    &-xs{
      padding: $xsValue;
    }
    &-sm{
      padding: $smValue;
    }
    &-md{
      padding: $mdValue;
    }
    &-lg{
      padding: $lgValue;
    }
    &-xl{
      padding: $xlValue;
    }
  }
  &y{
    &-xs{
      padding-top    : $xsValue;
      padding-bottom : $xsValue;
    }
    &-sm{
      padding-top    : $smValue;
      padding-bottom : $smValue;
    }
    &-md{
      padding-top    : $mdValue;
      padding-bottom : $mdValue;
    }
    &-lg{
      padding-top    : $lgValue;
      padding-bottom : $lgValue;
    }
    &-xl{
      padding-top    : $xlValue;
      padding-bottom : $xlValue;
    }
  }
  &x{
    &-xs{
      padding-left  : $xsValue;
      padding-right : $xsValue;
    }
    &-sm{
      padding-left  : $smValue;
      padding-right : $smValue;
    }
    &-md{
      padding-left  : $mdValue;
      padding-right : $mdValue;
    }
    &-lg{
      padding-left  : $lgValue;
      padding-right : $lgValue;
    }
    &-xl{
      padding-left  : $xlValue;
      padding-right : $xlValue;
    }
  }
  &t{
    &-xs{
      padding-top: $xsValue;
    }
    &-sm{
      padding-top: $smValue;
    }
    &-md{
      padding-top: $mdValue;
    }
    &-lg{
      padding-top: $lgValue;
    }
    &-xl{
      padding-top: $xlValue;
    }
  }
  &b{
    &-xs{
      padding-bottom: $xsValue;
    }
    &-sm{
      padding-bottom: $smValue;
    }
    &-md{
      padding-bottom: $mdValue;
    }
    &-lg{
      padding-bottom: $lgValue;
    }
    &-xl{
      padding-bottom: $xlValue;
    }
  }
  &l{
    &-xs{
      padding-left: $xsValue;
    }
    &-sm{
      padding-left: $smValue;
    }
    &-md{
      padding-left: $mdValue;
    }
    &-lg{
      padding-left: $lgValue;
    }
    &-xl{
      padding-left: $xlValue;
    }
  }
  &r{
    &-xs{
      padding-right: $xsValue;
    }
    &-sm{
      padding-right: $smValue;
    }
    &-md{
      padding-right: $mdValue;
    }
    &-lg{
      padding-right: $lgValue;
    }
    &-xl{
      padding-right: $xlValue;
    }
  }
}
